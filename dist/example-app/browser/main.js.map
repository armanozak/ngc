{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;AACuD;AACJ;;;AAEnD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,YAAY,EAAE,GAAG,EAAE,CAAC,4DAAW;KAChC;CACF,CAAC;AAQK,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHALlB,CAAC,iEAAoB,CAAC,MAAM,EAAE;gBACrC,iBAAiB,EAAE,iBAAiB;aACvC,CAAC,CAAC,EACS,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;;ACPjB,MAAM,YAAY;;wEAAZ,YAAY;0GAAZ,YAAY;QAHrB,2EAA+B;;;;;;;;;;;;;;;;;;;;;ACJuB;AACqB;AACvB;AAET;;;AAQxC,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;2GADb,EAAE,YADJ,CAAC,iEAAgB,EAAE,yFAAkC,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC,EAAE,yFAAuB,CAAC;mIAIrG,SAAS,mBALL,wDAAY,aACjB,iEAAgB,EAAE,sEAA4D,yFAAuB;;;;;;;;;;;;;;;;;;ACR1D;AACJ;;;AAEnD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,4DAAc;KAC1B;CACF,CAAC;AAMK,MAAM,kBAAkB;;oFAAlB,kBAAkB;+GAAlB,kBAAkB;mHAHpB,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY;mIAEX,kBAAkB,oFAFnB,yDAAY;;;;;;;;;;;;;;;;;;;;;;;ACUjB,MAAM,cAAc;IArB3B;QAsBE,mBAAc,GAAG,OAAO,CAAC;KAC1B;;4EAFY,cAAc;4GAAd,cAAc;QAlBvB,yEAAuB;QAGN,0EAAe;QAAA,4DAAY;QACtC,2EAKE;QADA,0LAA4B;QAJ9B,4DAKE;QAIN,qEAAI;QAAA,uDAA0B;QAAA,4DAAK;;QAL7B,0DAA4B;QAA5B,uFAA4B;QAK9B,0DAA0B;QAA1B,kGAA0B;;;;;;;;;;;;;;;;;;;;;ACjBS;AACY;AAEG;AACT;;AAM5C,MAAM,WAAW;;sEAAX,WAAW;wGAAX,WAAW;4GAFb,CAAC,qEAAkB,EAAE,uDAAW,EAAE,mEAAc,CAAC;mIAE/C,WAAW,mBAHP,4DAAc,aACnB,qEAAkB,EAAE,uDAAW,EAAE,mEAAc;;;;;;;;;;;;;;;ACT3D,gFAAgF;AAChF,mEAAmE;AACnE,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,SAAS,SAAS;IAChB,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;SAClD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACpC,CAAC;AAAA,CAAC;AAGF,IAAI,QAAQ,CAAC,UAAU,KAAK,UAAU,EAAE;IACtC,SAAS,EAAE,CAAC;CACb;KAAM;IACL,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC;CAC1D","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/hello/hello-routing.module.ts","./src/app/hello/hello.component.ts","./src/app/hello/hello.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HelloModule } from './hello/hello.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () => HelloModule\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    initialNavigation: 'enabledBlocking'\n})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <router-outlet></router-outlet>\n  `\n})\nexport class AppComponent {}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [AppRoutingModule, BrowserModule.withServerTransition({ appId: 'serverApp' }), BrowserAnimationsModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HelloComponent } from './hello.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HelloComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HelloRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-hello',\n  template: `\n    <div class=\"container\">\n      <form>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Greeting Target</mat-label>\n          <input\n            matInput\n            placeholder=\"Eg. Angular\"\n            name=\"target\"\n            [(ngModel)]=\"greetingTarget\"\n          />\n        </mat-form-field>\n      </form>\n\n      <h1>Hello {{ greetingTarget }}</h1>\n    </div>\n  `,\n  styleUrls: ['./hello.component.scss'],\n})\nexport class HelloComponent {\n  greetingTarget = 'world';\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { HelloRoutingModule } from './hello-routing.module';\nimport { HelloComponent } from './hello.component';\n\n@NgModule({\n  declarations: [HelloComponent],\n  imports: [HelloRoutingModule, FormsModule, MatInputModule]\n})\nexport class HelloModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nfunction bootstrap() {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n};\n\n\nif (document.readyState === 'complete') {\n  bootstrap();\n} else {\n  document.addEventListener('DOMContentLoaded', bootstrap);\n}\n\n"],"names":[],"sourceRoot":"webpack:///"}